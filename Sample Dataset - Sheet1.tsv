PaperID	PaperName	Intent
paper_jsons/1055.json	1	Create a flowchart to illustrate the process of the proposed joint model incorporating SVM and deep neural network for sentiment analysis. The flowchart should start with the input data, followed by the SVM classifier construction using N-gram, N-POS and sentiment lexicons features. Then, the application of a convolutional neural network to learn paragraph representation features as the input of another SVM classifier. Finally, the merging of the classification results from these two classifiers to produce the final classification results.
paper_jsons/1055.json	2	Create a flowchart where the 'SMOTE' and 'SVM Classifier' steps are highlighted and explained in more detail, including how SMOTE balances the dataset and how the SVM classifier categorizes the text data into positive, neutral, or negative sentiments. (A_Joint_Model_for_Chinese_Microblog_Sentiment_Analysis)
paper_jsons/1055.json	3	Based on Performances by different classifiers in unrestricted resource subtask, create a series of bar charts each representing the performance metrics (Precision, Recall, F1) for the categories (All, Positive, Negative) across the different approaches (Classifier 1, Classifier 2, Merging). This will allow for easier comparison of each classifier's performance across different evaluation metrics and categories.
paper_jsons/1055.json	4	Create a set of bar charts from Performances in unrestricted resource subtask, with separate charts for each of the metrics (Precision, Recall, F1) across the categories (All, Positive, Negative) to better visualize and compare team performances.
paper_jsons/1001.json	5	Create a flowchart to illustrate the process of constructing a quasi-parallel corpus using analogical associations based on a certain number of parallel corpus and a small number of monolingual data.
paper_jsons/1001.json	6	Create a table summarizing the statistics on the Chineseâ€“Japanese corpus used for the training, tuning, and test sets in baseline and baseline + quasi-parallel data.
paper_jsons/1001.json	7	Create a flowchart to explain the process of constructing a quasi-parallel corpus automatically by using analogical associations based on certain number of parallel corpus and a small number of monolingual data.
paper_jsons/1001.json	8	Create a table to summarize the datasets, evaluation metrics used or hyperparameters chosen in the paper, including the number of sentences in the training corpus, tuning set, and test set, as well as the evaluation results using different versions of Moses.
paper_jsons/1032.json	9	Create a table summarizing the different approaches to executing instructions, highlighting the differences between the proposed method and previous works such as SAIL, Blocks domain, ATIS corpus, and SCONE corpus.
paper_jsons/1032.json	10	Create a flowchart illustrating the process of how the proposed learning algorithm, SESTRA, maps context-dependent sequential instructions to actions, taking into account both the history of the interaction and the state of the world.
paper_jsons/1032.json	11	Create a table summarizing the different approaches to executing instructions, highlighting the differences between the proposed method and previous works such as SAIL, Blocks domain, ATIS corpus, and SCONE corpus.
paper_jsons/1032.json	12	Create a table summarizing the different datasets used in the study, such as the SAIL corpus, Blocks domain, ATIS corpus, and SCONE corpus, along with the specific characteristics of each that make them suitable for the study.
paper_jsons/1037.json	13	Create a  flowchart to illustrate the crowdsourcing pipeline for QA-SRL annotation generation and validation.
paper_jsons/1037.json	14	Create a table summarizing the evaluation metrics used for QA-SRL annotation validation, including Fleiss's Kappa, agreement rate, and exact match rate.
paper_jsons/1075.json	15	Create a flowchart to explain the process of the proposed hybrid pointer-generator network and how it facilitates copying words from the source text while retaining the ability to generate new words.
paper_jsons/1075.json	16	Create a table to summarize the datasets used, evaluation metrics (like ROUGE points)
paper_jsons/1075.json	17	Create a comprehensive pie chart for each n-gram and sentence category, visually differentiating 'pointer-generator with no coverage', 'pointer-generator with coverage', and 'reference summaries' as separate sections in each pie chart to highlight the distribution more distinctly.
paper_jsons/1080.json	18	Create a flowchart illustrating the process of creating a dataset for the headline generation task, including the preparation of headline candidates and the execution of a crowdsourcing task.